---
import { colourText } from '@/utils/maps';
import { hasSlot } from '@/utils/helpers';
import LinkArrow from '@/components/Elements/LinkArrow.astro';

interface Props {
  title: string;
  headline: string;
  description: string;
  cta: string;
  color?: ColorTypes;
  class?: string;
}

const hasSlotDefault = await hasSlot(Astro.slots, 'default');
const {
  title,
  headline,
  description,
  cta,
  color = 'current',
  class: className,
  ...rest
} = Astro.props as Props;

const colorTitle = colourText[color as keyof typeof colourText] ?? '';
const classes = ['card-project-hero', className];

const colourHoverMap: Record<string, string> = {
  yellow: 'before:text-yellow',
  green: 'before:text-green',
  blue: 'before:text-blue',
  purple: 'before:text-purple',
} as const;
---

<div
  data-js="card-background-gradient-hover-effect"
  class:list={classes}
  {...rest}
>
  <div
    class="transform-style-3d backface-hidden rotate-x-0 rotate-y-0 will-change-transform rounded-30 lg:rounded-40 w-full h-full overflow-hidden text-left transition-transform duration-300 ease-out"
  >
    <a
      href="/"
      class:list={[
        'card-project-hero__link group rounded-[inherit] block w-full h-full p-1 bg-white/10',
        'light:bg-navy/15',
        colourHoverMap[color],
      ]}
    >
      <div
        class:list={[
          'card-project-hero__inner rounded-[inherit] relative z-10 w-full h-full overflow-hidden bg-card',
          'light:bg-white',
          colourHoverMap[color],
        ]}
      >
        <div
          class="card-project-hero__content rounded-[inherit] relative z-20 w-full h-full p-30 lg:p-60 grid grid-cols-1 gap-30 lg:gap-40 lg:grid-cols-[1fr_58%]"
        >
          <div class="md:gap-30 flex flex-col items-start justify-start gap-20">
            <div
              class="gap-30 md:gap-40 flex flex-col items-start justify-start"
            >
              <p
                class:list={[
                  colorTitle,
                  'font-heading font-semibold text-15 lg:text-18 text-balance',
                ]}
              >
                {title}
              </p>

              <h3 class="font-heading text-fluid-h5 text-balance font-semibold">
                {headline}
              </h3>
            </div>

            <p
              class="font-normal text-15 lg:text-18 opacity-70 text-pretty max-w-[36ch]"
            >
              {description}
            </p>

            <LinkArrow
              class="font-heading text-15 lg:text-18 mt-auto font-bold"
            >
              {cta}
            </LinkArrow>
          </div>

          {
            hasSlotDefault && (
              <div>
                <div class="shadow-media w-full">
                  <slot />
                </div>
              </div>
            )
          }
        </div>
      </div>
    </a>
  </div>
</div>

<style is:global>
  .card-project-hero__content {
    box-shadow:
      0px 0px 100px theme('colors.navy') inset,
      20px 20px 50px theme('colors.card') inset;

    [data-js-theme='light'] & {
      box-shadow: none;
    }
  }

  .card-project-hero__link,
  .card-project-hero__inner {
    &::before {
      opacity: 0;
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1;
      translate: var(--x) var(--y) 0;
      width: 150%;
      aspect-ratio: 1;
      pointer-events: none;
      transition: opacity 0.3s ease;
      background-image: radial-gradient(currentColor, transparent, transparent);

      [data-js-theme='light'] & {
        color: theme('colors.navy-lightest');
      }
    }
  }

  .card-project-hero__link {
    &:hover {
      &::before {
        opacity: 1;
      }

      .card-project-hero__inner {
        &::before {
          opacity: 0.2;
        }
      }
    }
  }
</style>
