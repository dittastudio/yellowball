---
import { colourText } from '@/utils/maps';
import Icon from '@/components/Elements/Icon.astro';

interface Props {
  figure: number;
  unit: string;
  headline: string;
  description: string;
  shape: ShapeTypes;
  color: ColorTypes;
  size?: 'small' | 'large';
  class?: string;
}

const {
  figure,
  unit,
  headline,
  description,
  shape,
  color,
  size = 'large',
  class: className,
  ...rest
} = Astro.props as Props;

const colorShape = colourText[color as keyof typeof colourText] ?? '';
---

<div
  data-js="card-figure"
  class:list={[
    'w-full h-full bg-white text-left rounded-30 lg:rounded-50',
    className,
  ]}
  {...rest}
>
  <a
    href="/"
    class="group rounded-30 lg:rounded-50 p-30 lg:p-50 lg:gap-10 border-navy/15 relative flex flex-col items-start justify-start w-full h-full gap-5 overflow-hidden border"
  >
    {
      figure && unit && (
        <p
          class:list={[
            'font-heading text-balance text-navy flex font-semibold',
            size === 'small' ? 'text-fluid-h2' : 'text-fluid-h1',
          ]}
        >
          <span data-js-figure>{figure}</span>
          {unit}
        </p>
      )
    }

    <div class="gap-15 z-10 flex flex-col items-start justify-start">
      <h3
        class="font-heading text-fluid-h6 text-balance text-navy font-semibold"
      >
        {headline}
      </h3>

      <p class="text-15 lg:text-18 text-navy-lightest text-balance font-normal">
        {description}
      </p>
    </div>

    {
      shape && colorShape && (
        <Icon
          data-js-shape
          name={`shape-${shape}`}
          width="100%"
          height="100%"
          class:list={[
            colorShape,
            'absolute bottom-0 right-0 z-0 size-150 lg:size-200 translate-x-1/3 translate-y-1/2 pointer-events-none',
          ]}
        />
      )
    }
  </a>
</div>
