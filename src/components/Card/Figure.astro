---
import Icon from '@/components/Elements/Icon.astro'

interface Props {
  figure: number
  unit: string
  headline: string
  description: string
  shape: 'circle' | 'square' | 'triangle'
  color: 'yellow' | 'green' | 'blue'
  class?: string
}

const {
  figure,
  unit,
  headline,
  description,
  shape,
  color,
  class: className,
  ...props
} = Astro.props as Props

const colors = {
  yellow: 'text-yellow',
  green: 'text-green',
  blue: 'text-blue',
}

const colorShape = colors[color as keyof typeof colors] ?? ''
---

<script>
  import gsap from 'gsap'
  import { ScrollTrigger } from 'gsap/dist/ScrollTrigger'

  gsap.registerPlugin(ScrollTrigger)

  const cards = [
    ...document.querySelectorAll('[data-js="card-figure"]'),
  ] as HTMLElement[]

  cards.forEach(card => {
    const figure = card.querySelector('[data-js-figure]') as HTMLElement
    const shape = card.querySelector('[data-js-shape]') as HTMLElement

    gsap.from(figure, {
      textContent: 0,
      duration: 2,
      snap: { textContent: 1 },
      ease: 'power4.inOut',
      scrollTrigger: {
        markers: false,
        trigger: figure,
        start: 'top bottom',
      },
    })

    gsap.to(shape, {
      y: `-${card.offsetHeight - shape.offsetHeight / 2}`,
      scrollTrigger: {
        markers: false,
        trigger: card,
        scrub: 1,
        start: 'bottom bottom',
        end: 'bottom top',
      },
    })
  })
</script>

<div
  data-js="card-figure"
  class:list={['w-full bg-white text-left rounded-30 lg:rounded-50', className]}
  {...props}
>
  <a
    href="/"
    class="group relative w-full h-full rounded-30 lg:rounded-50 p-30 lg:p-50 flex flex-col justify-start items-start gap-5 lg:gap-10 border border-navy/15 overflow-hidden"
  >
    {
      figure && unit && (
        <p class="flex font-heading font-semibold text-56 lg:text-80 text-balance text-navy">
          <span data-js-figure>{figure}</span>
          {unit}
        </p>
      )
    }

    <div class="z-10 flex flex-col justify-start items-start gap-15">
      <h6
        class="font-heading font-semibold text-21 lg:text-28 text-balance text-navy"
      >
        {headline}
      </h6>

      <p class="font-normal text-15 lg:text-18 text-navy-lightest text-balance">
        {description}
      </p>
    </div>

    {
      shape && colorShape && (
        <Icon
          data-js-shape
          name={`shape-${shape}`}
          class:list={[
            colorShape,
            'absolute bottom-0 right-0 z-0 size-150 lg:size-200 translate-x-1/3 translate-y-1/2',
          ]}
        />
      )
    }
  </a>
</div>
