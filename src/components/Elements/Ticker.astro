---
interface Props {
  class?: string
}

const { class: className } = Astro.props as Props
---

<script>
  import gsap from 'gsap'
  import { ScrollTrigger } from 'gsap/dist/ScrollTrigger'

  const tickers = [
    ...document.querySelectorAll('[data-js="ticker"]'),
  ] as HTMLElement[]

  tickers.forEach(ticker => {
    ScrollTrigger.create({
      markers: false,
      trigger: ticker,
      start: 'top bottom',
      end: 'bottom top',
      scrub: 1.5,
      onUpdate: self => {
        const progress = self.progress

        gsap.to(ticker, {
          x: -ticker.clientWidth * progress + 1,
        })
      },
    })
  })
</script>

<div
  data-js="ticker"
  class:list={[
    'element-ticker contain-layout font-heading text-fluid-h1 font-semibold',
    className,
  ]}
>
  <ul class="select-none flex justify-center min-w-full">
    {
      [...Array(3)].map(() => (
        <li class="flex shrink-0 gap-[var(--gap)] items-center justify-around min-w-full px-[calc(var(--gap)/2)]">
          <slot />
        </li>
      ))
    }
  </ul>
</div>

<style>
  .element-ticker {
    --gap: 0.5em;
  }
</style>
