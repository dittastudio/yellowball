---
interface Props {
  class?: string;
  spacingClasses?: string;
  speed?: number;
  disableInteraction?: boolean;
}

const {
  class: className,
  spacingClasses = '',
  speed = 20,
  disableInteraction = false,
} = Astro.props as Props;
---

<div
  data-js={!disableInteraction ? 'ticker' : null}
  class:list={['ui-ticker contain-layout', className]}
  style={`--ticker-speed: ${speed}s`}
>
  <div data-js-container class="flex justify-center transform-gpu">
    {
      [...Array(4)].map(() => (
        <div
          data-js-wrapper
          class="ui-ticker__wrapper min-w-full shrink-0 transform-gpu"
        >
          <div
            data-js-list
            class="ui-ticker__list select-none flex justify-center shrink-0 min-w-full transform-gpu"
          >
            <div
              class:list={[
                'flex shrink-0 items-center justify-around min-w-full',
                spacingClasses,
              ]}
            >
              <slot />
            </div>
          </div>
        </div>
      ))
    }
  </div>
</div>

<style is:global>
  .ui-ticker {
    @keyframes tickerLeft {
      0% {
        translate: 0 0 0;
      }
      100% {
        translate: -100% 0 0;
      }
    }

    @keyframes tickerRight {
      0% {
        translate: 0 0 0;
      }
      100% {
        translate: 100% 0 0;
      }
    }
  }

  .ui-ticker__wrapper {
    animation: tickerRight var(--ticker-speed) linear infinite paused;
  }

  .ui-ticker__list {
    animation: tickerLeft var(--ticker-speed) linear infinite;
  }
</style>
