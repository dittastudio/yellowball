---
import Chip from '@/components/Elements/Chip.astro';
---

<script>
  import gsap from 'gsap';
  import { ScrollTrigger } from 'gsap/dist/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  const section = document.querySelector('[data-js="cursors"]') as HTMLElement;
  const cursors = [
    ...section?.querySelectorAll('[data-js-cursor]'),
  ] as HTMLElement[];

  const timelines: gsap.core.Timeline[] = [];
  const easings = [
    'power1.inOut',
    'power2.inOut',
    'power3.inOut',
    'power4.inOut',
  ];

  const getRandomDuration = () => gsap.utils.random(1.5, 5);
  const getRandomEasing = () => gsap.utils.random(easings);
  const getRandomPosition = (cursor: HTMLElement) => ({
    x: gsap.utils.random(0, section.offsetWidth - cursor.offsetWidth),
    y: gsap.utils.random(0, section.offsetHeight - cursor.offsetHeight),
  });

  const createTimeline = (cursor: HTMLElement) => {
    const timeline = gsap.timeline({ repeat: -1 });

    const animate = () => {
      const position = getRandomPosition(cursor);
      const duration = getRandomDuration();
      const easing = getRandomEasing();

      timeline.to(cursor, {
        x: position.x,
        y: position.y,
        duration: duration,
        ease: easing,
        onComplete: animate,
      });
    };

    animate();

    return timeline;
  };

  cursors.forEach(cursor => {
    gsap.set(cursor, {
      opacity: 0,
      scale: 0,
      x: Math.random() * section.offsetWidth,
      y: Math.random() * section.offsetHeight,
    });
  });

  gsap.delayedCall(0.25, () => {
    gsap.to(cursors, {
      opacity: 1,
      scale: 1,
      stagger: 0.25,
      duration: 1,
      ease: 'back.inOut(4)',
      onComplete: () => {
        cursors.forEach(cursor => {
          const timeline = createTimeline(cursor);
          timelines.push(timeline);
        });
      },
    });
  });

  let isPlaying = true;
  let delayedCall: gsap.core.Tween | null = null;

  const clearDelay = () => {
    delayedCall?.kill();
    delayedCall = null;
  };

  gsap
    .timeline({
      scrollTrigger: {
        markers: false,
        trigger: section,
        start: '10% top',
        end: 'bottom center',
        scrub: 1.5,
        invalidateOnRefresh: true,
        onEnter: () => {
          if (isPlaying) {
            timelines.forEach(timeline => timeline.pause());
            isPlaying = false;
          }
        },
        onLeaveBack: () => {
          clearDelay();

          if (!isPlaying) {
            delayedCall = gsap.delayedCall(5, () => {
              ScrollTrigger.refresh();
              timelines.forEach(timeline => timeline.play());
              isPlaying = true;
            });
          }
        },
      },
    })
    .to(cursors, {
      x: (_index, target) => section.offsetWidth / 2 - target.offsetWidth / 2,
      y: (_index, target) => section.offsetHeight - target.offsetHeight,
    })
    .to(cursors, {
      scale: 0,
      opacity: 0,
    });
</script>

<div data-js="cursors" class="absolute inset-0 z-10 pointer-events-none">
  <Chip
    data-js-cursor
    title="PPC Team"
    class="bg-blue absolute top-0 left-0 z-0 shadow-lg opacity-0"
  />
  <Chip
    data-js-cursor
    title="Design Team"
    class="bg-yellow absolute top-0 left-0 z-0 shadow-lg opacity-0"
  />
  <Chip
    data-js-cursor
    title="SEO Team"
    class="bg-green absolute top-0 left-0 z-0 shadow-lg opacity-0"
  />
  <Chip
    data-js-cursor
    title="Developers"
    class="bg-grey absolute top-0 left-0 z-0 shadow-lg opacity-0"
  />
</div>
