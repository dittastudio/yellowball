---
import { colourText } from '@/utils/maps';
import Icon from '@/components/Elements/Icon.astro';

interface Props {
  type: 'logo' | 'outline';
  name: string;
  hover?: string | undefined;
  color?: ColorTypes | undefined;
}

const { type, name, hover, color = 'white' } = Astro.props as Props;

const colorClasses = type === 'outline' ? colourText[color] : 'text-white';

const hoverClasses =
  type === 'outline'
    ? {
        white: '[a:hover_&]:text-navy [a:hover_&]:bg-white',
        green: '[a:hover_&]:text-navy [a:hover_&]:bg-green',
        blue: '[a:hover_&]:text-navy [a:hover_&]:bg-blue',
        yellow: '[a:hover_&]:text-navy [a:hover_&]:bg-yellow',
        purple: '[a:hover_&]:text-navy [a:hover_&]:bg-purple',
      }
    : {
        white: '[a:hover_&]:bg-white',
        green: '[a:hover_&]:bg-white',
        blue: '[a:hover_&]:bg-white',
        yellow: '[a:hover_&]:bg-white',
        purple: '[a:hover_&]:bg-white',
      };
---

<span
  class:list={[
    'relative block shrink-0 size-40 md:size-50',
    'border border-solid border-navy-lighter bg-navy-light rounded-12 overflow-hidden',
  ]}
>
  <span
    class:list={[
      'flex justify-center items-center size-full',
      'transition-[color,background-color] duration-250 ease-smooth',
      colorClasses,
      hoverClasses[color as keyof typeof hoverClasses],
    ]}
  >
    {
      type === 'outline' ? (
        <span class="size-22 [&_svg]:size-full">
          <Icon name={name} width={28} height={28} class="size-full" />
        </span>
      ) : (
        <span class="relative size-22 md:size-28 [&_svg]:size-full">
          <span class="cube-icon__under block size-full">
            <Icon name={name} width={28} height={28} class="size-inherit" />
          </span>

          {hover && (
            <span class="cube-icon__hover absolute inset-0 size-inherit">
              <Icon name={hover} width={28} height={28} class="size-inherit" />
            </span>
          )}
        </span>
      )
    }
  </span>
</span>

<style is:global>
  .cube-icon__under {
    opacity: 1;
    transition: opacity 0.25s theme('transitionTimingFunction.smooth');

    a:hover & {
      opacity: 0;
      transition: opacity 0.25s theme('transitionTimingFunction.smooth');
    }
  }

  .cube-icon__hover {
    opacity: 0;
    transition: opacity 0.25s theme('transitionTimingFunction.smooth');

    a:hover & {
      opacity: 1;
      transition: opacity 0.25s theme('transitionTimingFunction.smooth');
    }
  }
</style>
