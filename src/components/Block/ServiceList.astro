---
import Button from '@/components/Elements/Button.astro';
import Cube from '@/components/Elements/Cube.astro';
import Icon from '@/components/Elements/Icon.astro';
import ServiceItem from '@/components/Elements/ServiceItem.astro';

interface ServiceListItem {
  headline: string;
  description: string;
  icon: {
    name: string;
    size: 'sm' | 'lg';
  };
}

interface Props {
  color?: ColorTypes;
  iconColor?: ColorTypes;
  items: ServiceListItem[];
  description?: string;
}

const {
  color = 'yellow',
  iconColor = 'white',
  items,
  description = '',
} = Astro.props as Props;
---

<script>
  import gsap from 'gsap';
  import { ScrollTrigger } from 'gsap/dist/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  const section = document.querySelector(
    '[data-js="service-list"]',
  ) as HTMLElement;

  if (section) {
    const items = section.querySelectorAll(
      '[data-js-item]',
    ) as NodeListOf<HTMLElement>;

    items.forEach(item => {
      gsap.fromTo(
        item,
        {
          x: 40,
          autoAlpha: 0,
          skewX: -3,
        },
        {
          x: 0,
          autoAlpha: 1,
          skewX: 0,
          scrollTrigger: {
            trigger: item,
            start: 'top 80%',
            end: 'center center',
            scrub: 1.5,
          },
        },
      );
    });
  }
</script>

<div data-js="service-list" class="wrapper flex flex-col gap-80 lg:gap-0">
  <div
    class="lg:grid lg:grid-cols-2 lg:gap-30 lg:sticky lg:top-[calc(var(--header-height)_+_50px)]"
  >
    <div
      class="relative w-full lg:col-span-1 flex flex-col justify-start items-start gap-40 md:gap-40"
    >
      {Astro.slots.headline && <slot name="headline" />}

      {
        description && (
          <p class="text-17 md:text-21 text-grey text-balance">{description}</p>
        )
      }

      <a href="/" class="block">
        <Button text="Let's Chat" hasArrow />
      </a>

      {Astro.slots.extra && <slot name="extra" />}
    </div>
  </div>

  <div class="lg:grid lg:grid-cols-2 lg:gap-30">
    <ul class="lg:col-span-1 lg:col-start-2 flex flex-col gap-50 md:gap-110">
      {
        items?.map(item => (
          <li data-js-item>
            <ServiceItem
              color={color}
              headline={item.headline}
              description={item.description}
            >
              <Cube slot="icon" color={iconColor} iconSize={item.icon.size}>
                <Icon name={item.icon.name} />
              </Cube>
            </ServiceItem>
          </li>
        ))
      }
    </ul>
  </div>
</div>
