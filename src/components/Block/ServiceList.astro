---
import Button from '@/components/Elements/Button.astro';
import CubeIcon from '@/components/Elements/CubeIcon.astro';
import ServiceItem from '@/components/Elements/ServiceItem.astro';

interface ServiceListItem {
  headline: string;
  description: string;
  icon: {
    type: 'logo' | 'outline';
    name: string;
    hover: string;
  };
}

interface Props {
  color?: ColorTypes;
  items: ServiceListItem[];
  description?: string;
}

const { color = 'yellow', items, description = '' } = Astro.props as Props;
---

<!-- Begin Block: ServiceList -->
<div data-js="service-list" class="wrapper flex flex-col gap-80 lg:gap-0">
  <div
    data-js-service-list-sticky
    class="lg:grid lg:grid-cols-2 lg:gap-30 lg:sticky lg:top-[var(--sticky-height)]"
  >
    <div
      class="relative w-full lg:col-span-1 flex flex-col justify-start items-start gap-40 md:gap-40"
    >
      {Astro.slots.extra && <slot name="extra" />}
      {Astro.slots.headline && <slot name="headline" />}

      {
        description && (
          <p class="text-17 md:text-21 text-grey text-balance max-w-[42ch]">
            {description}
          </p>
        )
      }

      <a href="/" class="block">
        <Button text="Let's Chat" hasArrow />
      </a>
    </div>
  </div>

  <div class="lg:grid lg:grid-cols-2 lg:gap-30">
    <ul class="lg:col-span-1 lg:col-start-2 flex flex-col gap-50 md:gap-110">
      {
        items?.map(item => (
          <li data-js-item>
            <ServiceItem
              color={color}
              headline={item.headline}
              description={item.description}
            >
              <CubeIcon slot="icon" icon={item.icon} color={color} />
            </ServiceItem>
          </li>
        ))
      }
    </ul>
  </div>
</div>
<!-- End Block: ServiceList -->
