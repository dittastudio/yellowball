---
import Icon from '@/components/Elements/Icon.astro'
import Chip from '@/components/Elements/Chip.astro'
import Link from '@/components/Elements/Link.astro'
import TextReveal from '@/components/Elements/TextReveal.astro'
---

<script>
  import gsap from 'gsap'
  import { ScrollTrigger } from 'gsap/dist/ScrollTrigger'
  import { gsapEasings } from '@/utils/helpers'

  gsap.registerPlugin(ScrollTrigger)

  const section = document.querySelector('[data-js="hero-home"]') as HTMLElement
  const container = section?.querySelector('.cursor-container') as HTMLElement
  const cursors = [...section?.querySelectorAll('.cursor')] as HTMLElement[]

  cursors.forEach(cursor => {
    gsap.set(cursor, {
      opacity: 0,
      scale: 0.5,
      x: Math.random() * container.offsetWidth,
      y: Math.random() * container.offsetHeight,
    })
  })

  gsap.delayedCall(1, () => {
    gsap.to(cursors, {
      opacity: 1,
      scale: 1,
      stagger: 0.3,
      duration: 0.3,
    })
  })

  let delayedCall: gsap.core.Tween | null = null

  const animation = () => {
    const tl = gsap.timeline({ paused: true })

    cursors.forEach((cursor, _index) => {
      const easing = gsap.utils.random(gsapEasings)
      const duration = gsap.utils.random(1, 5)

      tl.to(
        cursor,
        {
          x: Math.random() * (container.offsetWidth - cursor.offsetWidth),
          y: Math.random() * (container.offsetHeight - cursor.offsetHeight),
          duration: duration,
          ease: easing,
        },
        0,
      )
    })

    tl.eventCallback('onComplete', () => {
      delayedCall = gsap.delayedCall(5, () => animation().play())
    })

    return tl
  }

  const clearDelay = () => {
    delayedCall?.kill()
    delayedCall = null
  }

  gsap.delayedCall(2, () => {
    animation().play()

    gsap
      .timeline({
        scrollTrigger: {
          markers: false,
          trigger: section,
          start: '10% top',
          end: '100% center',
          scrub: 1.5,
          invalidateOnRefresh: true,
          onEnter: () => {
            animation().pause()
            animation().kill()

            clearDelay()
          },
          onEnterBack: () => {
            // clearDelay();
          },
          onLeaveBack: () => {
            clearDelay()

            delayedCall = gsap.delayedCall(1.5, () => {
              ScrollTrigger.refresh()
              animation().play()
            })
          },
          onLeave: () => {
            clearDelay()
          },
        },
      })
      .to(cursors, {
        x: (_index, target) => section.offsetWidth / 2 - target.offsetWidth / 2,
        y: (_index, target) => section.offsetHeight - target.offsetHeight,
        opacity: 0,
      })
  })
</script>

<section
  data-js="hero-home"
  class="text-center text-white pt-50 md:pt-90 pb-160"
>
  <div
    class="wrapper relative flex flex-col justify-start items-center gap-40 md:gap-60"
  >
    <Icon name="yellowball" class="w-[117px] h-[22px]" />

    <TextReveal>
      <h1 class="font-heading text-fluid-h1 font-semibold text-balance">
        <span class="text-green">Websites</span> that get your business rolling
      </h1>
    </TextReveal>

    <p class="text-17 md:text-21 text-grey text-balance">
      We're a boutique, London-based web design agency, crafting stunning,
      bespoke websites that captivate and convert. Ready to get the ball
      rolling? <Link href="/" class="text-yellow">Let's chat</Link>
    </p>

    <div class="cursor-container absolute inset-0 z-10 pointer-events-none">
      <Chip
        title="PPC Team"
        class="cursor bg-blue absolute top-0 left-0 z-0 opacity-0 shadow-lg"
      />
      <Chip
        title="Design Team"
        class="cursor bg-yellow absolute top-0 left-0 z-0 opacity-0 shadow-lg"
      />
      <Chip
        title="SEO Team"
        class="cursor bg-green absolute top-0 left-0 z-0 opacity-0 shadow-lg"
      />
      <Chip
        title="Developers"
        class="cursor bg-grey absolute top-0 left-0 z-0 opacity-0 shadow-lg"
      />
    </div>
  </div>
</section>
