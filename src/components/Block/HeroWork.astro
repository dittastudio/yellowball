---
import { colourText } from '@/utils/maps';
import { hasSlot } from '@/utils/helpers';
import TagCategory from '@/components/Elements/TagCategory.astro';
import TextReveal from '@/components/Elements/TextReveal.astro';

interface Props {
  theme?: ThemeTypes;
  color?: ColorTypes;
  title: string;
  heading: string;
  categories: {
    shape: ShapeTypes;
    color: ColorTypes;
    text: string;
  }[];
}

const {
  theme = 'dark',
  color = 'current',
  title,
  heading,
  categories,
} = Astro.props as Props;
const hasSlotCta = await hasSlot(Astro.slots, 'cta');
---

<!-- Begin Block: HeroWork -->
<div class="wrapper relative flex flex-col gap-20 md:gap-50 pt-15 md:pt-40">
  <p
    class:list={[
      'text-15 md:text-18 font-heading font-bold flex items-baseline gap-20',
      colourText[color],
    ]}
  >
    {
      theme === 'light' && (
        <TagCategory theme="light" text="Yellowball Lite" size="large" />
      )
    }
    {title}
  </p>

  <div class="flex flex-col gap-30">
    <TextReveal
      onEnter
      tag="h1"
      class="font-heading text-fluid-h2 font-semibold max-w-[18ch]"
    >
      {heading}
    </TextReveal>

    <div class="flex flex-wrap justify-between items-center gap-30 md:gap-20">
      <ul class="flex flex-wrap gap-12">
        {
          categories?.map(({ shape, color, text }) => (
            <li>
              <TagCategory {theme} {shape} {color} {text} />
            </li>
          ))
        }
      </ul>

      {hasSlotCta && <slot name="cta" />}
    </div>
  </div>
</div>
<!-- End Block: HeroWork -->
