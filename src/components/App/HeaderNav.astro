---
import AppHeaderLogo from '@/components/App/HeaderLogo.astro';
import AppHeaderButton from '@/components/App/HeaderButton.astro';

interface Props {
  class?: string;
  hasLogo?: boolean;
  items: {
    text: string;
    href: string;
  }[];
}

const { class: className, hasLogo = false, items } = Astro.props as Props;
---

<script>
  import gsap from 'gsap';

  const navs = document.querySelectorAll(
    '[data-js=header-nav]',
  ) as NodeListOf<HTMLElement>;

  navs.forEach(nav => {
    const navList = nav.querySelector('[data-js-header-nav-list]');
    const navItems = nav.querySelectorAll('[data-js-header-nav-item]');
    const pill = nav.querySelector('[data-js-header-nav-pill]');

    let pillActive = false;
    const duration = 0.3;
    const ease = 'back.out(0.6)';

    const updatePill = (target: any) => {
      const { offsetWidth, offsetLeft } = target.firstElementChild;

      if (pillActive) {
        gsap.to(pill, {
          opacity: 1,
          width: offsetWidth,
          left: offsetLeft,
          duration,
          ease,
        });
      } else {
        gsap.set(pill, {
          width: offsetWidth,
          left: offsetLeft,
        });

        gsap.to(pill, {
          opacity: 1,
          duration,
          ease,
          onStart: () => {
            pillActive = true;
          },
        });
      }
    };

    const hidePill = () => {
      gsap.to(pill, {
        opacity: 0,
        duration,
        ease,
      });
    };

    navList?.addEventListener('mouseleave', () => (pillActive = false));

    navItems?.forEach(item => {
      item.addEventListener('mouseenter', e => updatePill(e.target));
      item.addEventListener('mouseleave', hidePill);
    });
  });
</script>

<nav
  class="flex gap-4 md:bg-offblack/10 md:backdrop-blur-20 md:rounded-16 md:border border-white/10 md:p-3 md:pointer-events-auto transition-[background-color,border-color] duration-150 ease-smooth"
>
  {
    hasLogo && (
      <a class="hidden md:block" href="/">
        <AppHeaderLogo />
        <span class="sr-only">Home</span>
      </a>
    )
  }

  <div data-js="header-nav" class:list={['header-nav', className]}>
    <ul data-js-header-nav-list class="header-nav__list">
      {
        items?.map((item: any) => (
          <li class="h-full">
            {item.hasSubmenu ? (
              <button
                data-js-header-nav-item
                class="block h-inherit p-12 md:p-3"
                type="button"
              >
                <AppHeaderButton hasSubmenu={true} text={item.text} />
              </button>
            ) : (
              <a
                data-js-header-nav-item
                class="block h-inherit p-12 md:p-3"
                href={item.href}
              >
                <AppHeaderButton text={item.text} />
              </a>
            )}
          </li>
        ))
      }
    </ul>

    <span
      data-js-header-nav-pill
      class="header-nav__pill block bg-yellow rounded-[12px] h-full absolute top-0 left-0 -z-1 opacity-0 mdMax:hidden"
    >
    </span>
  </div>
</nav>

<style>
  .header-nav {
    position: relative;
    display: flex;
    height: 100%;
  }

  .header-nav__list {
    display: flex;
    flex-direction: column;

    @media screen(md) {
      margin: -3px;
      flex-direction: row;
    }
  }
</style>
