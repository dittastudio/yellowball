---
import AppHeaderLogo from '@/components/App/HeaderLogo.astro';
import AppHeaderButton from '@/components/App/HeaderButton.astro';
import AppHeaderNav from '@/components/App/HeaderNav.astro';

const classNav =
  'flex gap-4 bg-offblack/10 backdrop-blur-20 rounded-16 border border-white/10 p-3 pointer-events-auto transition-[background-color,border-color] duration-150 ease-smooth';

const classNavListLink = 'block h-full';

const navListOne = [
  { text: 'Services', href: '/', hasSubmenu: true },
  { text: 'Our Work', href: '/' },
  { text: 'Agency', href: '/' },
];

const navListTwo = [
  { text: 'Guides', href: '/' },
  { text: 'Contact', href: '/' },
];
---

<script>
  import gsap from 'gsap';
  import { ScrollTrigger } from 'gsap/dist/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  const header = document.querySelector('[data-js="header"]') as HTMLElement;
  const navs = document.querySelectorAll(
    '[data-js-header-nav]',
  ) as NodeListOf<HTMLElement>;

  if (header) {
    const sections = document.querySelectorAll(
      '[data-js-theme]',
    ) as NodeListOf<HTMLElement>;
    const halfHeaderHeight = header.clientHeight / 2;

    sections.forEach(section => {
      ScrollTrigger.create({
        markers: false,
        trigger: section,
        start: `top ${halfHeaderHeight}px`,
        end: `bottom ${halfHeaderHeight}px`,
        onToggle: ({ isActive }) => {
          const checkIfLightTheme =
            isActive && section.getAttribute('data-js-theme') === 'light';

          header.classList[checkIfLightTheme ? 'remove' : 'add']('text-white');
          header.classList[!checkIfLightTheme ? 'remove' : 'add']('text-navy');

          navs.forEach(nav => {
            nav.classList[checkIfLightTheme ? 'remove' : 'add'](
              'bg-offblack/10',
            );
            nav.classList[checkIfLightTheme ? 'remove' : 'add'](
              'border-white/10',
            );
            nav.classList[!checkIfLightTheme ? 'remove' : 'add'](
              'bg-grey-light/50',
            );
            nav.classList[!checkIfLightTheme ? 'remove' : 'add'](
              'border-grey-light/30',
            );
          });
        },
      });
    });

    const resizeObserver = new ResizeObserver(() => {
      requestAnimationFrame(() => {
        ScrollTrigger.refresh();
      });
    });

    const resizeTarget: HTMLBodyElement | any = document.querySelector('body');

    resizeObserver.observe(resizeTarget);
  }
</script>

<header
  data-js="header"
  class="sticky top-0 z-50 p-12 md:p-18 pointer-events-nonex"
>
  <a class="block" href="/">
    <AppHeaderLogo />
    <span class="sr-only">Home</span>
  </a>

  <div class="header__outer">
    <div data-lenis-prevent class="header__inner">
      <nav data-js-header-nav class={classNav}>
        <!-- <a class="block" href="/">
        <AppHeaderLogo />
        <span class="sr-only">Home</span>
      </a> -->

        <div class="mdMax:hiddenx">
          <AppHeaderNav items={navListOne} />
        </div>
      </nav>

      <nav data-js-header-nav class={classNav}>
        <div class="mdMax:hiddenx">
          <AppHeaderNav items={navListTwo} />
        </div>

        <!-- <a class={classNavListLink} href="/">
          <AppHeaderButton text="Work with us" type="navy" />
        </a>

        <button type="button" class="md:hidden h-full">
          <AppHeaderButton text="Menu" type="yellow" />
        </button> -->
      </nav>
    </div>
  </div>
</header>

<style>
  .header__outer {
    @media screen(mdMax) {
      position: absolute;
      top: var(--header-height);
      left: 0;
      width: 100%;
      height: calc(100vh - var(--header-height));
      padding: 12px;
    }
  }

  .header__inner {
    @media screen(mdMax) {
      background-color: theme('colors.navy-light');
      border: 1px solid rgba(255, 255, 255, 0.1);
      padding: 40px;
      border-radius: 16px;
      width: 100%;
      height: 100%;
      overflow-y: auto;
      overscroll-behavior-y: contain;
    }

    @media screen(md) {
      display: flex;
      justify-content: space-between;
    }
  }
</style>
