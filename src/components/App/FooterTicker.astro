---
import Icon from '@/components/Elements/Icon.astro'
import Ticker from '@/components/Elements/Ticker.astro'

const copy = ['Letâ€™s work together']
const multipleCopy: string[] = [...copy, ...copy, ...copy]
---

<script>
  // let isVisible = false

  // const tickers = [
  //   ...document.querySelectorAll('[data-js=app-footer-ticker]'),
  // ] as HTMLElement[]

  // tickers.forEach(ticker => {
  //   const callback = (entries: any) => {
  //     const [{ isIntersecting }] = entries

  //     isVisible = isIntersecting

  //     if (isVisible) {
  //       ticker?.classList.add('is-visible')
  //     } else {
  //       ticker?.classList.remove('is-visible')
  //     }
  //   }

  //   const options = {
  //     root: null,
  //     rootMargin: '0px 0px 0px 0px',
  //     threshold: 0,
  //   }

  //   const observer = new IntersectionObserver(callback, options)

  //   if (ticker) observer.observe(ticker)
  // })
</script>

<section
  data-js="app-footer-ticker"
  class="footer-ticker block w-full pt-100 pb-50"
>
  <div class="footer-ticker__outer wrapper-full">
    <div
      class="footer-ticker__inner bg-yellow text-navy py-[1.9em] md:py-[1.15em] rounded-[0.8em] font-heading text-fluid-h1 font-semibold contain-paint"
    >
      <Ticker class="relative -top-[0.1em]">
        {
          multipleCopy.map(text => (
            <p class="inline-flex gap-[var(--gap)] items-center">
              {text}

              <span class="relative top-[0.1em] bg-navy text-white shrink-0 size-[1em] flex items-center justify-center rounded-[0.3em]">
                <Icon name="arrow-ne" class="block size-[0.2em]" />
              </span>
            </p>
          ))
        }
      </Ticker>
    </div>
  </div>
</section>
