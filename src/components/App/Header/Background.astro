---
interface Props {
  isDesktopOnly?: boolean;
}

const { isDesktopOnly = false } = Astro.props as Props;
---

<div
  data-js="header-background"
  class:list={[
    'header-background',
    isDesktopOnly ? 'is-desktop-only' : 'is-both',
  ]}
>
  <slot />
</div>

<style is:global>
  .header-background {
    --header-bg-theme-text-color: theme('colors.white');
    --header-bg-theme-bg-color: theme('colors.offblack/0.1');
    --header-bg-theme-border-color: theme('colors.white/0.1');

    transition:
      background-color theme('transitionDuration.200')
        theme('transitionTimingFunction.smooth'),
      border-color theme('transitionDuration.200')
        theme('transitionTimingFunction.smooth');

    &.is-light {
      --header-bg-theme-text-color: theme('colors.navy');
      --header-bg-theme-bg-color: theme('colors.grey-lightRgba/0.5');
      --header-bg-theme-border-color: theme('colors.grey-lightRgba/0.3');
    }

    &.is-both {
      color: var(--header-bg-theme-text-color);
      background-color: var(--header-bg-theme-bg-color);
      border: 1px solid var(--header-bg-theme-border-color);
      border-radius: theme('borderRadius.16');
      backdrop-filter: blur(20px);
      padding: theme('spacing.3');
    }

    &.is-desktop-only {
      @media screen(md) {
        color: var(--header-bg-theme-text-color);
        background-color: var(--header-bg-theme-bg-color);
        border: 1px solid var(--header-bg-theme-border-color);
        border-radius: theme('borderRadius.16');
        backdrop-filter: blur(20px);
        padding: theme('spacing.3');
      }
    }
  }
</style>
