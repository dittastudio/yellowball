---
import { componentProperties } from '@/utils/helpers';
import CardProfile from '@/components/Card/Profile.astro';
import CardProfileSummary from '@/components/Card/ProfileSummary.astro';

interface Props {
  slides: any[];
  color?: ColorTypes;
}

const { slides, color = 'green', ...rest } = Astro.props as Props;
const { classes, attributes } = componentProperties(['carousel-profile'], rest);
---

<div
  data-js="carousel-profile"
  data-css="carousel-profile"
  class:list={classes}
  style={`--_slidesNumber: ${slides?.length}`}
  {...attributes}
>
  <div data-js-swiper class="carousel-profile__swiper swiper">
    <div class="carousel-profile__swiper-wrapper swiper-wrapper">
      {
        slides.map(slide =>
          slide.type === 'profile' ? (
            <div class="carousel-profile__swiper-slide swiper-slide">
              <CardProfile role={slide.role} name={slide.name} {color}>
                <img
                  class="object-cover size-full"
                  src={slide.image?.src}
                  alt={slide.image?.alt}
                  width={slide.image?.width}
                  height={slide.image?.height}
                />
              </CardProfile>
            </div>
          ) : (
            <div class="carousel-profile__swiper-slide swiper-slide">
              <CardProfileSummary title={slide.title} copy={slide.copy} {color}>
                {slide.avatars?.map((avatar: any) => (
                  <img
                    src={avatar.src}
                    alt={avatar.alt}
                    width={avatar.width}
                    height={avatar.height}
                  />
                ))}
              </CardProfileSummary>
            </div>
          ),
        )
      }
    </div>

    <div class="text-center col-span-full mt-20 md:hidden">
      <div class="carousel-profile__swiper-pagination swiper-pagination"></div>
    </div>
  </div>
</div>

<style is:global>
  [data-css='carousel-profile'] {
    .carousel-profile__swiper {
      display: grid;
      grid-template-columns: repeat(8, minmax(0, 1fr));
      margin-left: calc(-1 * var(--inner-gutter));
    }

    .carousel-profile__swiper-wrapper {
      cursor: grab;

      &:active {
        cursor: grabbing;
      }

      grid-column: span 8;

      @media screen(xsToSm) {
        grid-column: span 7;
        left: 0;

        transition:
          transform 0.5s var(--swiper-slide-ease),
          left 0.5s theme('transitionTimingFunction.smooth') !important;

        .carousel-profile.is-first-slide & {
          left: -7%;
        }

        .carousel-profile.is-last-slide & {
          left: 7%;
        }
      }
    }

    .carousel-profile__swiper-slide {
      padding-left: var(--inner-gutter);
      width: 100%;

      @media screen(sm) {
        width: calc(1 / 2 * 100%);
      }

      @media screen(xl) {
        width: calc(1 / 3 * 100%);
      }
    }

    .carousel-profile__swiper-pagination {
      display: inline-flex;
    }
  }
</style>
