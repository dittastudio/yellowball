---
import CardProject from "@/components/Card/Project.astro";

interface Slide {
  imageMobile: ImageObject;
  imageDesktop: ImageObject;
}

interface Props {
  slides: Slide[];
  class?: string;
}

const { slides, class: className } = Astro.props as Props;

const classes = ["carousel-project", className];
---

<script>
  import Swiper from "swiper";
  import type { SwiperOptions } from "swiper/types";
  import { Autoplay, Navigation, Pagination, Keyboard } from "swiper/modules";

  const swiperParams: SwiperOptions = {
    speed: 1000,
    slidesPerView: "auto",
    centeredSlides: true,
    spaceBetween: 30,
    loop: true,
    autoplay: {
      delay: 4000,
      disableOnInteraction: false,
    },
    keyboard: {
      enabled: true,
    },
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev",
    },
    pagination: {
      el: ".swiper-pagination",
      clickable: true,
      renderBullet(_, className) {
        return `
          <button type="button" class="${className}">
            <span class="carousel-project__pill"></span>
          </button>
        `;
      },
    },
  };

  const swiper = new Swiper(".swiper", {
    modules: [Autoplay, Navigation, Pagination, Keyboard],
    ...swiperParams,
  });
</script>

<!-- Slider main container -->
<div class:list={classes} style={`--_slidesNumber: ${slides?.length}`}>
  <div class="swiper">
    <div class="swiper-wrapper">
      <!-- Slides -->
      {
        slides.map(({ imageMobile, imageDesktop }) => (
          <div class="swiper-slide">
            <CardProject {imageMobile} {imageDesktop} />
          </div>
        ))
      }
    </div>
    <!-- If we need pagination -->
    <div class="swiper-pagination"></div>

    <!-- If we need navigation buttons -->
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
  </div>
</div>

<style>
  .carousel-project {
    --_nudge: theme("spacing.50");

    width: 100%;
  }

  .swiper {
    position: relative;
    z-index: 1;
    padding-bottom: var(--_nudge);
  }

  .swiper-wrapper {
    --slide-ease: cubic-bezier(0.24, 1.2, 0.24, 1);

    position: relative;
    width: 100%;
    height: 100%;
    z-index: 1;
    display: flex;
    transition-property: transform;
    transition-timing-function: var(--slide-ease);
    transform: translate3d(0px, 0, 0);
    touch-action: pan-y;
  }

  .swiper-slide {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    width: 100%;
    translate: 0 var(--_nudge) 0;
    transition: translate theme("transitionDuration.500")
      theme("transitionTimingFunction.smooth");

    &.swiper-slide-active {
      translate: 0 0 0;
    }
  }

  .swiper-pagination {
    --_pill-padding-x: 4px;
    --_pill-padding-y: 8px;
    --_pill-width: 16px;
    --_pill-width-active: 24px;
    --_pill-container: calc(
      (var(--_pill-width) * var(--_slidesNumber)) + var(--_pill-width-active)
    );

    position: absolute;
    left: 50%;
    bottom: 0;
    width: min-content;
    transform: translateX(-50%);
    display: flex;
    z-index: 2;
    width: var(--_pill-container);
    margin-bottom: calc(-1 * var(--_pill-padding-y));

    :global(.swiper-pagination-bullet) {
      display: block;
      opacity: 0.2;
      border-radius: theme("borderRadius.full");
      transition:
        opacity theme("transitionDuration.500")
          theme("transitionTimingFunction.smooth"),
        flex-grow theme("transitionDuration.500")
          theme("transitionTimingFunction.smooth");
      flex-shrink: 0;
      flex-grow: calc(1 / 4);
      padding: var(--_pill-padding-y) var(--_pill-padding-x);

      &.swiper-pagination-bullet-active {
        flex-grow: 1;
        opacity: 1;
      }
    }

    :global(.carousel-project__pill) {
      display: block;
      width: 100%;
      height: theme("spacing.4");
      background-color: theme("colors.white");
      border-radius: theme("borderRadius.full");
    }
  }
</style>
